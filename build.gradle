plugins {
    id 'java'
    id "org.springframework.boot" version "2.0.1.RELEASE"
}

group 'org.ganesh.upstox'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile "junit:junit:${junitVersion}"
    compile "com.googlecode.json-simple:json-simple:${gsonVersion}"
    compile "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    compile "org.springframework.boot:spring-boot-starter-websocket:${springBootVersion}"
//    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
//    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.30'
}

bootRun {
    if (project.findProperty("filepath")) {
        println "Provided File path: " + filepath
        main = "-jar";
        if (project.findProperty("milli")) {
            args = [jar.archivePath, filepath, milli]
        } else {
            args = [jar.archivePath, filepath]
        }
    } else {
//        throw new GradleException('Required filepath environment variable not set.')
    }
}

/*
task runJar(type: JavaExec) {
    if (project.findProperty("filepath")) {
        println "Provided File path: " + filepath
        main = "-jar";
        if (project.findProperty("milli")) {
            args = [jar.archivePath, filepath, milli]
        } else {
            args = [jar.archivePath, filepath]
        }
    } else {
//        throw new GradleException('Required filepath environment variable not set.')
    }
}
*/

jar {
    into 'resources', {
        from 'resources'
    }
    manifest {
        attributes "Main-Class": "org.analyticalserver.ohlc.ApplicationRunner"
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}